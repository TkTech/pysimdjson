on:
  workflow_dispatch:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Creating release

env:
  CIBW_TEST_EXTRAS: test
  CIBW_TEST_COMMAND: "pytest {project}/tests"
  CIBW_TEST_SKIP: "*_arm64 *_universal2:arm64"
  CIBW_ARCHS_MACOS: "x86_64 universal2"

jobs:
  # Build & test simple source release before wasting hours building and
  # testing the binary build matrix.
  sdist:
    name: Creating source release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Installing python build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      - name: Building source distribution
        run: |
          pip install -e ".[release]"
          python setup.py sdist

      - name: Ensuring documentation builds
        run: |
          cd docs && make clean && make html

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  build_wheels:
    needs: [sdist]
    name: "[${{ strategy.job-index }}/${{ strategy.job-total }}] py${{ matrix.py }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-10.15]
        # cp - CPython
        # pp - PyPy
        py: ["cp39", "cp310", "cp311", "cp312", "pp37", "pp38", "pp39"]

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Setting up Python
        with:
          python-version: '3.8'

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: all

      - name: Build & test wheels
        uses: pypa/cibuildwheel@v2.16.5
        env:
          CIBW_ARCHS_LINUX: auto aarch64 ppc64le
          CIBW_BUILD: "${{ matrix.py }}-*"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl

  upload_all:
    needs: [build_wheels, sdist]
    name: Uploading built packages to pypi for release.
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: ${{ secrets.PYPI_USERNAME }}
        password: ${{ secrets.PYPI_PASSWORD }}

  build_documentation:
    name: Building & uploading documentation.
    needs: [upload_all]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setting up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Installing python build dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade setuptools

      - name: Installing release dependencies.
        run: |
          pip install -e ".[release]"

      - name: Building documentation
        run: |
          cd docs && make clean && make html

      - name: Publishing documentation
        run: |
          ghp-import -f -n -c pysimdjson.tkte.ch -p docs/_build/html
