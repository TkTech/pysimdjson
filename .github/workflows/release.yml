on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create release

jobs:
  build:
    name: Creating Windows and OSX wheels

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, windows-latest]
        python-version: [3.6, 3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        pip install wheel twine
        pip install -e .

    - name: Publishing to PyPi
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python setup.py bdist_wheel
        twine upload dist/*

  build_manylinux2010:
    name: Creating manylinux releases

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Build (manylinux2014)
      uses: RalfG/python-wheels-manylinux-build@v0.3-manylinux2014_x86_64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
        build-requirements: 'cython'

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        pip install wheel twine

    - name: Publishing to PyPi
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*-manylinux*.whl

  build_manylinux2014_aarch64:
    name: Creating manylinux aarch64 releases

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - uses: docker/setup-qemu-action@v1
      name: Set up QEMU

    - name: Build (manylinux2014aarch64)
      uses: RalfG/python-wheels-manylinux-build@v0.3.4-manylinux2014_aarch64
      with:
        python-versions: 'cp36-cp36m cp37-cp37m cp38-cp38 cp39-cp39'
        build-requirements: 'cython'

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        pip install wheel twine
    - name: Publishing to PyPi
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        twine upload dist/*-manylinux*.whl

  sdist:
    name: Creating source release

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: 3.8

    - name: Install python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade setuptools
        pip install wheel twine

    - name: Publishing to PyPi
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        pip install -e ".[release]"
        python setup.py sdist
        twine upload dist/*

    - name: Building documentation
      run: |
        cd docs && make clean && make html

    - name: Publishing documentation
      run: |
        ghp-import -f -n -c pysimdjson.tkte.ch -p docs/_build/html
